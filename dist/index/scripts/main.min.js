(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function () {

    'use strict';

    module.exports = {
        bindings: {
            "item": "="
        },
        templateUrl: 'components/album-card/album-card.component.html',
        controllerAs: 'vm',
        controller: ['$scope', 'dialogService', function ($scope, dialogService) {

            var vm = this;

            console.log('dialogService', dialogService);

            vm.openDialog = function ($event) {

                dialogService.show({
                    templateUrl: 'controllers/card-detail.controller.html',
                    controllerAs: 'CardDetailController as vm',
                    locals: {
                        data: {
                            item: vm.item
                        }
                    }
                });

                console.log('$event', $event);

            }

        }]
    }

}());
},{}],2:[function(require,module,exports){
(function () {

    'use strict';

    module.exports = {
        bindings: {
            "item": "="
        },
        templateUrl: 'components/artist-card/artist-card.component.html',
        controllerAs: 'vm',
        controller: ['$scope', 'dialogService', function ($scope, dialogService) {

            var vm = this;

            console.log('dialogService', dialogService);

            vm.openDialog = function($event) {

                dialogService.show({
                    templateUrl: 'controllers/card-detail.controller.html',
                    controllerAs: 'CardDetailController as vm',
                    locals: {
                        data: {
                            item: vm.item
                        }
                    }
                });

                console.log('$event', $event);

            }

        }]
    }

}());
},{}],3:[function(require,module,exports){
(function () {

    'use strict';

    module.exports = {
        bindings: {
            "item": "="
        },
        templateUrl: 'components/track-card/track-card.component.html',
        controllerAs: 'vm',
        controller: ['$scope', 'dialogService', function ($scope, dialogService) {

            var vm = this;

            console.log('dialogService', dialogService);

            vm.openDialog = function($event) {

                dialogService.show({
                    templateUrl: 'controllers/card-detail.controller.html',
                    controllerAs: 'CardDetailController as vm',
                    locals: {
                        data: {
                            item: vm.item
                        }
                    }
                });

                console.log('$event', $event);

            }

        }]
    }

}());
},{}],4:[function(require,module,exports){
(function () {

    'use strict';

    var searchService = require('../services/search.service');

    module.exports = function ($scope) {

        console.log('init');

        var vm = this;

        vm.items = [];
        vm.searchQuery = '';
        vm.readyStatus = {content: false};


        vm.search = function () {

            console.log('search!');

            vm.readyStatus.content = false;

            searchService.getList(vm.searchQuery).then(function (data) {

                vm.items = vm.items.concat(data);
                vm.readyStatus.content = true;

                $scope.$apply();

            })

        }

    }


}());
},{"../services/search.service":14}],5:[function(require,module,exports){
(function () {

    'use strict';

    var trackService = require('../services/track.service');
    var albumService = require('../services/album.service');
    var artistService = require('../services/artist.service');

    module.exports = function ($scope, dialogService, data) {

        var vm = this;

        vm.item = data.item;
        vm.itemDetailed = null;

        vm.getData = function () {


            if (vm.item.type == 'track') {
                trackService.getByKey(vm.item.id).then(function (data) {
                    vm.itemDetailed = data;
                    $scope.$apply();
                })
            }

            if (vm.item.type == 'album') {

                albumService.getByKey(vm.item.id).then(function (data) {
                    vm.itemDetailed = data;
                    $scope.$apply();
                })

            }

            if (vm.item.type == 'artist') {

                artistService.getByKey(vm.item.id).then(function (data) {
                    vm.itemDetailed = data;
                    $scope.$apply();
                })

            }

        };

        vm.getData();

        vm.close = function () {
            dialogService.cancel();
        };

        console.log('$scope', $scope);
        console.log('data', data);
        console.log('dialogService', dialogService);
        console.log('vm', vm);

    }

}());
},{"../services/album.service":10,"../services/artist.service":11,"../services/track.service":15}],6:[function(require,module,exports){
(function () {

    'use strict';

    var cookiesService = require('../services/cookie.service');

    var getByKey = function (id) {

        return fetch('https://api.spotify.com/v1/albums/' + id,
            {
                headers: {
                    "Authorization": "Bearer " + cookiesService.getCookie('token'),
                    "Content-Type": "application/x-www-form-urlencoded"
                }
            }).then(function (data) {
            return data.json();
        })

    };

    module.exports = {
        getByKey: getByKey
    }

}());
},{"../services/cookie.service":12}],7:[function(require,module,exports){
(function () {

    'use strict';

    var cookiesService = require('../services/cookie.service');

    var getByKey = function (id) {

        return fetch('https://api.spotify.com/v1/artists/' + id,
            {
                headers: {
                    "Authorization": "Bearer " + cookiesService.getCookie('token'),
                    "Content-Type": "application/x-www-form-urlencoded"
                }
            }).then(function (data) {
            return data.json();
        })

    };

    module.exports = {
        getByKey: getByKey
    }

}());
},{"../services/cookie.service":12}],8:[function(require,module,exports){
/**
 * Created by szhitenev on 17.04.2017.
 */
(function () {

    'use strict';

    var getList = function (query) {

        return fetch('https://api.spotify.com/v1/search?type=album,track,artist&limit=4&q=' + query).then(function (data) {
            return data.json();
        })


    };


    module.exports = {
        getList: getList
    }


}());
},{}],9:[function(require,module,exports){
(function () {

    'use strict';

    var cookiesService = require('../services/cookie.service');

    var getByKey = function (id) {

        return fetch('https://api.spotify.com/v1/tracks/' + id,
            {
                headers: {
                    "Authorization": "Bearer " + cookiesService.getCookie('token'),
                    "Content-Type": "application/x-www-form-urlencoded"
                }
            }).then(function (data) {
            return data.json();
        })

    };

    module.exports = {
        getByKey: getByKey
    }

}());
},{"../services/cookie.service":12}],10:[function(require,module,exports){
(function () {

    'use strict';

    var albumRepository = require('../repositories/album.repository');

    var getByKey = function (id) {
        return albumRepository.getByKey(id);
    };

    module.exports = {
        getByKey: getByKey
    }


}());
},{"../repositories/album.repository":6}],11:[function(require,module,exports){
(function () {

    'use strict';

    var artistService = require('../repositories/artist.repository');

    var getByKey = function (id) {
        return artistService.getByKey(id);
    };

    module.exports = {
        getByKey: getByKey
    }


}());
},{"../repositories/artist.repository":7}],12:[function(require,module,exports){
(function () {

    'use strict';

    'use strict';

    var getCookie = function (name) {
        var cookieValue = null;
        if (document.cookie && document.cookie != '') {
            var cookies = document.cookie.split(';');
            for (var i = 0; i < cookies.length; i++) {
                var cookie = jQuery.trim(cookies[i]);
                // Does this cookie string begin with the name we want?
                if (cookie.substring(0, name.length + 1) == (name + '=')) {
                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                    break;
                }
            }
        }
        return cookieValue;
    };

    var setCookie = function (name, value, options) {
        options = options || {};

        var expires = options.expires;

        if (typeof expires == "number" && expires) {
            var d = new Date();
            d.setTime(expires);
            expires = options.expires = d;
        }
        if (expires && expires.toUTCString) {
            options.expires = expires.toUTCString();
        }

        value = encodeURIComponent(value);

        var updatedCookie = name + "=" + value;

        for (var propName in options) {
            updatedCookie += "; " + propName;
            var propValue = options[propName];
            if (propValue !== true) {
                updatedCookie += "=" + propValue;
            }
        }

        document.cookie = updatedCookie;
    };

    var deleteCookie = function (name) {
        setCookie(name, "", {expires: -1})
    };

    module.exports = {
        getCookie: getCookie,
        setCookie: setCookie,
        deleteCookie: deleteCookie
    }

}());
},{}],13:[function(require,module,exports){
(function () {

    'use strict';

    module.exports = function ($rootScope, $controller, $compile, $templateCache) {

        var dialogTemplate;
        var dialogElement;
        var templateScope;
        var templateCtrl;

        var _this = this;


        this.show = function (params) {

            if (dialogElement) {
                dialogElement.html('');
            }


            dialogTemplate = $templateCache.get(params.templateUrl);

            dialogTemplate = '<div class="dialog-wrapper">' + dialogTemplate + '</div>';

            console.log('params', params);
            console.log('_this', _this);

            templateScope = $rootScope.$new(true);
            templateCtrl = $controller(params.controllerAs, {
                $scope: templateScope,
                dialogService: _this,
                data: params.locals.data
            });

            console.log('templateCtrl', templateCtrl);

            dialogElement = angular.element(dialogTemplate);

            dialogElement.children().data('$ngControllerController', templateCtrl);

            var compiled = $compile(dialogElement)(templateScope);

            $('body').append(compiled);

        };

        this.hide = function () {
            $('.dialog-wrapper').remove();
            dialogElement.html('');

            return new Promise(function (resolve, reject) {
                resolve(options);
            })
        };

        this.cancel = function () {
            $('.dialog-wrapper').remove();
            dialogElement.html('');
        };

        return {
            show: this.show,
            hide: this.hide,
            cancel: this.cancel
        }


    }

}());
},{}],14:[function(require,module,exports){
(function () {

    'use strict';

    var searchRepository = require('../repositories/search.repository');

    var getList = function (query) {
        return searchRepository.getList(query).then(function (data) {

            var items = [];

            items = items.concat(data.albums.items);

            items = items.concat(data.artists.items);

            items = items.concat(data.tracks.items);

            console.log('items', items);

            return items;
        })
    };

    module.exports = {
        getList: getList
    }

}());
},{"../repositories/search.repository":8}],15:[function(require,module,exports){
(function () {

    'use strict';

    var trackService = require('../repositories/track.repository');

    var getByKey = function (id) {
        return trackService.getByKey(id);
    };

    module.exports = {
        getByKey: getByKey
    }


}());
},{"../repositories/track.repository":9}],16:[function(require,module,exports){
'use strict';

var app = angular.module('index', []);

app.controller('AppController', ['$scope', require('./app/controllers/app.controller.js')]);
app.controller('CardDetailController', ['$scope', 'dialogService', 'data', require('./app/controllers/card-detail.controller.js')]);

app.service('dialogService', ['$rootScope', '$controller', '$compile', '$templateCache', require('./app/services/dialog.service')]);

app.component('artistCard', require('./app/components/artist-card/artist-card.component'));
app.component('albumCard', require('./app/components/album-card/album-card.component'));
app.component('trackCard', require('./app/components/track-card/track-card.component'));

app.run(function(){

    var cookiesService = require('./app/services/cookie.service');

    cookiesService.setCookie('token', 'BQAdCvzToN5O0jPs3T-HPvQkt976Ngfacp9GX_8KoXbmS0R9mb3wPUhXD_ZXwHqOFjUZZOfbfnZQ5srlAQaUKA');

});

require('./templates.min.js');

},{"./app/components/album-card/album-card.component":1,"./app/components/artist-card/artist-card.component":2,"./app/components/track-card/track-card.component":3,"./app/controllers/app.controller.js":4,"./app/controllers/card-detail.controller.js":5,"./app/services/cookie.service":12,"./app/services/dialog.service":13,"./templates.min.js":17}],17:[function(require,module,exports){
!function(a){try{a=angular.module("index")}catch(i){a=angular.module("index",[])}a.run(["$templateCache",function(a){a.put("controllers/app.controller.html",'<div data-ng-controller="AppController as vm"><div class="section-pink"><div class="abs-left-top design-author"><img src="index/content/img/gl-logo@2x.png" alt="logo"></div><div class="abs-right-top powered-by">Powered by Spotify</div><img src="index/content/img/hero-img@2x.png" alt="logo" class="logo"> <img src="index/content/img/Page 1@2x.png" alt="go down" class="go-down-arrow"></div><div class="section-search"><div class="search-wrap"><input type="text" data-ng-model="vm.searchQuery" placeholder="Search for artist or album title"> <a href="#" data-ng-click="vm.search()">Search</a></div></div><div class="section-results"><div data-ng-if="vm.items.length" class="results-holder"><div data-ng-repeat="item in vm.items track by item.id" class="card-holder"><div data-ng-if="item.type == \'album\'"><album-card item="item"></album-card></div><div data-ng-if="item.type == \'artist\'"><artist-card item="item"></artist-card></div><div data-ng-if="item.type == \'track\'"><track-card item="item"></track-card></div></div></div><div data-ng-if="!vm.items.length" class="results-not-found"><img src="index/content/img/Magnify@2x.png" alt="logo"><p>Your results will appear here</p></div></div><footer>Designed by Geek Label - Powered by Spotify</footer></div>')}])}(),function(a){try{a=angular.module("index")}catch(i){a=angular.module("index",[])}a.run(["$templateCache",function(a){a.put("controllers/card-detail.controller.html",'<div class="card-detail dialog"><div class="dialog-header"><div class="img-holder"><img src="" data-ng-if="vm.item.images[0].url" data-ng-src="{{vm.item.images[0].url}}" alt=""></div><p class="d-name" data-ng-bind="vm.item.name"></p><a href="#" class="close-dialog" data-ng-click="vm.close()"><i class="fa fa-times"></i></a></div><div>Albums</div></div>')}])}(),function(a){try{a=angular.module("index")}catch(i){a=angular.module("index",[])}a.run(["$templateCache",function(a){a.put("components/album-card/album-card.component.html",'<div class="card album-card" data-ng-click="vm.openDialog($event)"><div class="card-img"><img data-ng-if="vm.item.images[0].url" data-ng-src="{{vm.item.images[0].url}}" src="" alt=""></div><div class="card-footer">{{vm.item.name}}</div></div>')}])}(),function(a){try{a=angular.module("index")}catch(i){a=angular.module("index",[])}a.run(["$templateCache",function(a){a.put("components/artist-card/artist-card.component.html",'<div class="card artist-card" data-ng-click="vm.openDialog($event)"><div class="card-img"><img data-ng-if="vm.item.images[0].url" data-ng-src="{{vm.item.images[0].url}}" src="" alt=""></div><div class="card-footer">{{vm.item.name}}</div></div>')}])}(),function(a){try{a=angular.module("index")}catch(i){a=angular.module("index",[])}a.run(["$templateCache",function(a){a.put("components/track-card/track-card.component.html",'<div class="card track-card" data-ng-click="vm.openDialog($event)"><div class="card-img"><img data-ng-if="vm.item.images[0].url" data-ng-src="{{vm.item.images[0].url}}" src="" alt=""></div><div class="card-footer">{{vm.item.name}}</div></div>')}])}();
},{}]},{},[16]);
